@page "/contacts"
@inject CookieHelper CookieHelper
@inject NavigationManager NavigationManager
@inject IMessageService MessageService

<PageTitle>Contacts</PageTitle>

@if (!isLoaded)
{
    <p>Loading...</p>
}
else if (string.IsNullOrEmpty(userName))
{
    <div class="alert alert-warning">Please login to manage contacts.</div>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <form @onsubmit="SaveContact">
                <input class="form-control mb-2" placeholder="Name" @bind="editContact.Name" />
                <input class="form-control mb-2" placeholder="Phone" @bind="editContact.PhoneNumber" />
                <button type="submit" class="btn btn-primary">Save</button>
                @if (editContact.Id != 0)
                {
                    <button type="button" class="btn btn-secondary ms-2" @onclick="CancelEdit">Cancel</button>
                }
            </form>
        </div>
        <div class="col-md-6">
            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Phone</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in contacts)
                    {
                        <tr>
                            <td>@c.Name</td>
                            <td>@c.PhoneNumber</td>
                            <td>
                                <button class="btn btn-sm btn-link" @onclick="(() => Edit(c))">Edit</button>
                                <button class="btn btn-sm btn-link text-danger" @onclick="(() => Delete(c.Id))">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private string? userName;
    private bool isLoaded;
    private List<ContactModel> contacts = new();
    private ContactModel editContact = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userName = await CookieHelper.LoginStatus();
            if (string.IsNullOrEmpty(userName))
            {
                NavigationManager.NavigateTo("login?returnUrl=/contacts", true);
            }
            else
            {
                contacts = (await MessageService.GetContacts(userName)).ToList();
            }
            isLoaded = true;
            StateHasChanged();
        }
    }

    private async Task SaveContact()
    {
        editContact.Owner = userName!;
        await MessageService.SaveContact(editContact);
        contacts = (await MessageService.GetContacts(userName!)).ToList();
        editContact = new ContactModel();
    }

    private void Edit(ContactModel c)
    {
        editContact = new ContactModel
        {
            Id = c.Id,
            Name = c.Name,
            PhoneNumber = c.PhoneNumber,
            Owner = userName!
        };
    }

    private async Task Delete(int id)
    {
        await MessageService.DeleteContact(id, userName!);
        contacts = (await MessageService.GetContacts(userName!)).ToList();
    }

    private void CancelEdit()
    {
        editContact = new ContactModel();
    }
}
